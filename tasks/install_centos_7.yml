---

# This will be use to place install file.
- name: Create install directory
  file:
    path: "{{ awslogs_install_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Configure
  include: configure.yml

- name: Check for md5sum of previously downloaded installer
  stat:
    path: "{{ awslogs_install_dir }}/awslogs-agent-setup.py.md5sum"
  register: old_md5sum_result

- name: Get md5sum of previously downloaded install script if it exists
  set_fact:
    previous_installer_md5sum: "{{ lookup('file', awslogs_install_dir + '/awslogs-agent-setup.py.md5sum') | default('') }}"
  when: old_md5sum_result.stat.exists

- name: Set empty md5sum if old md5sum doesn't exist
  set_fact:
    previous_installer_md5sum: 'empty'
  when: not old_md5sum_result.stat.exists

- name: Register md5sum of upstream install script via HEAD request
  uri:
    url: "{{ awslogs_install_url }}"
    method: HEAD
  register: install_script_upstream_response
  when: awslogs_enforce_latest

- name: Force download of new install script if upstream md5sum has changed
  set_fact:
    awslogs_force_download: true
  when: awslogs_enforce_latest and previous_installer_md5sum != install_script_upstream_response.etag

- name: Download the installer
  get_url:
    dest: "{{ awslogs_install_dir }}/awslogs-agent-setup.py"
    group: root
    owner: root
    mode: 0600
    url: "{{ awslogs_install_url }}"
    force: "{{ awslogs_force_download | default('false') }}"
  register: install_script

- name: Save installer md5sum to disk
  copy:
    content: "{{ install_script.md5sum }}"
    dest: "{{ awslogs_install_dir }}/awslogs-agent-setup.py.md5sum"
  when: install_script.changed

- name: Check if aws log is already running
  shell: ps aux | grep "[a]ws logs push"
  register: aws_logs_process
  changed_when: False
  ignore_errors: yes

- name: Run the install script provided by AWS.
  shell: python "{{ awslogs_install_dir }}/awslogs-agent-setup.py" -n -r "{{ aws_region }}" -c "{{ awslogs_install_dir }}/awslogs.conf"
  when: aws_logs_process.rc != 0 or config_file.changed or install_script.changed

- name: Copy systemd unit file
  copy:
    src: awslogs.service
    dest: /lib/systemd/system/awslogs.service
    owner: root
    group: root
    mode: 0644
  register: systemd_file

- name: Refresh systemctl service
  shell: "systemctl daemon-reload"
  when : systemd_file.changed

- name: Start awslogs service
  service:
    name: awslogs
    state: "{{ awslogs_service_state }}"

# service module does not enable when systemd and init are installed.
# Need the "use:" directive as workaround
# https://github.com/ansible/ansible-modules-core/issues/3764
#
- name: Enable awslogs service
  service:
    name: awslogs
    enabled: yes
    use: service
